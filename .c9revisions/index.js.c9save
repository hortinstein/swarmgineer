{"ts":1362532441851,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var request = require('request');\n//http://labs.unwieldy.net/moowheel/\nvar prompt = require('prompt');\n//\n// Start the prompt\n//\nprompt.start();\n\n//\n// Get two properties from the user: username and email\n//\nswarm_inputs = [{\n\tname: \"swarm_name\",\n\tdescription: \"please name your swarm\",\n\ttype: 'string',\n\tpattern: /^[A-Za-z1-9]+$/,\n\tmessage: 'name must be a alphanumeric string',\n\trequired: true\n}, {\n\tname: \"curator_size\",\n\tdescription: \"what size should your curator be?\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\n\tmessage: 'type must be a number',\n\tdefault:'66'\n}, {\n\tname: \"nanode_size\",\n\tdescription: \"what type of riak nodes would you like?\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\n\tmessage: 'type must be a number'\n}, {\n\tname: \"num_riak_nodes\",\n\tdescription: \"how many riak nodes do you need in the swarm\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\n\tdefault: '5',\n\tmessage: 'number of nodes must be a number'\n}]\n\n\n\nprompt.get(swarm_inputs, function(err, result) {\n\t//\n\t// Log the results.\n\t//\n\tconsole.log('input received:');\n\tconsole.log('swam: ' + result.username);\n\tconsole.log('  email: ' + result.email);\n\trequest.post('http://localhost:8080/init', {\n\t\tform: {\n\t\t\tkey: 'value'\n\t\t}\n\t})\n\n});"]],"start1":0,"start2":0,"length1":0,"length2":1196}]],"length":1196}
{"contributors":[],"silentsave":false,"ts":1362532756531,"patch":[[{"diffs":[[0,"ompt');\n"],[1,"var digital_ocean = require('brinydeep');\n"],[0,"//\n// St"]],"start1":95,"start2":95,"length1":16,"length2":58},{"diffs":[[0,"mail\n//\n"],[1,"var "],[0,"swarm_in"]],"start1":242,"start2":242,"length1":16,"length2":20},{"diffs":[[0,"er'\n}]\n\n"],[-1,"\n\n"],[1,"if (!module.parent) {\n    "],[0,"prompt.g"]],"start1":953,"start2":953,"length1":18,"length2":42},{"diffs":[[0,") {\n"],[-1,"\t//\n\t// Log the results.\n\t//\n"],[1,"    "],[0,"\tcon"]],"start1":1032,"start2":1032,"length1":37,"length2":12},{"diffs":[[0,"ved:');\n"],[1,"    "],[0,"\tconsole"]],"start1":1065,"start2":1065,"length1":16,"length2":20},{"diffs":[[0,"log('swa"],[-1,"m"],[1,"rm name"],[0,": ' + re"]],"start1":1086,"start2":1086,"length1":17,"length2":23},{"diffs":[[0,"ult."],[-1,"user"],[1,"swarm_"],[0,"name);\n"],[1,"    "],[0,"\tcon"]],"start1":1110,"start2":1110,"length1":19,"length2":25},{"diffs":[[0,"email);\n"],[1,"    "],[0,"\trequest"]],"start1":1165,"start2":1165,"length1":16,"length2":20},{"diffs":[[0,"nit', {\n"],[1,"    "],[0,"\t\tform: "]],"start1":1215,"start2":1215,"length1":16,"length2":20},{"diffs":[[0,"form: {\n"],[1,"    "],[0,"\t\t\tkey: "]],"start1":1229,"start2":1229,"length1":16,"length2":20},{"diffs":[[0,"ue'\n"],[-1,"\t\t}\n\t})\n\n"],[1,"    \t\t}\n    \t})\n    \n    "],[0,"});"],[1,"\n}"]],"start1":1253,"start2":1253,"length1":16,"length2":34}]],"length":1287,"saved":false}
{"ts":1362532781213,"patch":[[{"diffs":[[0,"le.log('"],[1,"swarm "],[0,"input re"]],"start1":1046,"start2":1046,"length1":16,"length2":22}]],"length":1293,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362532952517,"patch":[[{"diffs":[[0,"sult) {\n    "],[-1,"\t"],[0,"console.log("]],"start1":1028,"start2":1028,"length1":25,"length2":24},{"diffs":[[0,"ved:');\n    "],[-1,"\t"],[0,"console.log("]],"start1":1070,"start2":1070,"length1":25,"length2":24},{"diffs":[[0,"e);\n    "],[-1,"\t"],[0,"console."]],"start1":1127,"start2":1127,"length1":17,"length2":16},{"diffs":[[0,"og('"],[-1,"  email"],[1,"curator size"],[0,": ' "]],"start1":1144,"start2":1144,"length1":15,"length2":20},{"diffs":[[0,"ult."],[-1,"email"],[1,"curator_size"],[0,");\n    "],[-1,"\t"],[0,"requ"]],"start1":1169,"start2":1169,"length1":21,"length2":27},{"diffs":[[0,"t', "],[-1,"{\n    \t\tform: {\n    \t\t\tkey: 'value'\n    \t\t}\n    \t})"],[1,"result);"],[0,"\n   "]],"start1":1231,"start2":1231,"length1":59,"length2":16}]],"length":1258,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364176755548,"patch":[[{"diffs":[[-1,"var request = require('request');\n//http://labs.unwieldy.net/moowheel/\nvar prompt = require('prompt');\nvar digital_ocean = require('brinydeep');\n//\n// Start the prompt\n//\nprompt.start();\n\n//\n// Get two properties from the user: username and email\n//\nvar swarm_inputs = [{\n\tname: \"swarm_name\",\n\tdescription: \"please name your swarm\",\n\ttype: 'string',\n\tpattern: /^[A-Za-z1-9]+$/,\n\tmessage: 'name must be a alphanumeric string',\n\trequired: true\n}, {\n\tname: \"curator_size\",\n\tdescription: \"what size should your curator be?\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\n\tmessage: 'type must be a number',\n\tdefault:'66'\n}, {\n\tname: \"nanode_size\",\n\tdescription: \"what type of riak nodes would you like?\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\n\tmessage: 'type must be a number'\n}, {\n\tname: \"num_riak_nodes\",\n\tdescription: \"how many riak nodes do you need in the swarm\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\n\tdefault: '5',\n\tmessage: 'number of nodes must be a number'\n}]\n\nif (!module.parent) {\n    prompt.get(swarm_inputs, "],[1,"//if the module is executed directly\nif (!module.parent) {\n    var prompts = require('./user_prompts/swarm_prompts.js');\n    var argv = require('optimist').argv;\n\tprompts("],[0,"function"],[1," "],[0,"(e"],[-1,"rr, result) {\n    console.log('swarm input received:');\n    console.log('swarm name: ' + result.swarm_name);\n    console.log('curator size: ' + result.curator_size);\n    request.post('http://localhost:8080/init', result);\n    \n    });\n}"],[1,",r) {\n\t\tconsole.log(r);\n\t});\n}\n"]],"start1":0,"start2":0,"length1":1258,"length2":213}]],"length":213,"saved":false}
{"ts":1364176813603,"patch":[[{"diffs":[[0,");\n\t});\n"],[1,"} \n//if the module is called from another program to modify existing json\nelse {\n    \n"],[0,"}\n"]],"start1":203,"start2":203,"length1":10,"length2":96}]],"length":299,"saved":false}
{"ts":1364176854103,"patch":[[{"diffs":[[1,"var \n\n"],[0,"//if the module is execu"]],"start1":0,"start2":0,"length1":24,"length2":30}]],"length":305,"saved":false}
{"ts":1364176884063,"patch":[[{"diffs":[[0,"var "],[1,"read_config = function"],[0,"\n\n//if t"]],"start1":0,"start2":0,"length1":12,"length2":34}]],"length":327,"saved":false}
{"ts":1364176902079,"patch":[[{"diffs":[[0,"function"],[1," (callback){\n    \n};"],[0,"\n\n//if t"]],"start1":18,"start2":18,"length1":16,"length2":36}]],"length":347,"saved":false}
{"ts":1364176923907,"patch":[[{"diffs":[[0,"nction ("],[1,"path, "],[0,"callback"]],"start1":20,"start2":20,"length1":16,"length2":22}]],"length":353,"saved":false}
{"ts":1364177087823,"patch":[[{"diffs":[[0,"k){\n    "],[1,"var fs = require('fs');\n    try {\n        // Query the entry\n        stats = fs.lstatSync(path);\n    \n        // Is it a directory?\n        if (stats.isDirectory()) {\n            // Yes it is\n        }\n    }\n    catch (e) {\n        // ...\n    }"],[0,"\n};\n\n//i"]],"start1":41,"start2":41,"length1":16,"length2":260}]],"length":597,"saved":false}
{"ts":1364177209335,"patch":[[{"diffs":[[0,"        "],[1,"var "],[0,"stats = "]],"start1":110,"start2":110,"length1":16,"length2":20},{"diffs":[[0,"(path);\n"],[-1,"    \n"],[0,"        "]],"start1":142,"start2":142,"length1":21,"length2":16},{"diffs":[[0,"    "],[-1,"// ..."],[1,"console.log('swarm configuration file not found, creating new'"],[0,"\n   "]],"start1":276,"start2":276,"length1":14,"length2":70}]],"length":652,"saved":false}
{"ts":1364185077681,"patch":[[{"diffs":[[0,"ing new'"],[1,");"],[0,"\n    }\n}"]],"start1":334,"start2":334,"length1":16,"length2":18},{"diffs":[[0," {\n    \n"],[1,"    module.exports =  \n"],[0,"}\n"]],"start1":644,"start2":644,"length1":10,"length2":33}]],"length":677,"saved":false}
{"ts":1364185086535,"patch":[[{"diffs":[[0,"ports = "],[1,"read_config"],[0," \n}\n"]],"start1":665,"start2":665,"length1":12,"length2":23}]],"length":688,"saved":false}
{"ts":1364196608082,"patch":[[{"diffs":[[0,"d_config"],[1,";"],[0," \n}\n"]],"start1":676,"start2":676,"length1":12,"length2":13}]],"length":689,"saved":false}
