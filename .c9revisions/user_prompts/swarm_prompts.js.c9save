{"ts":1364176441901,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var prompt = require('prompt');\nvar apis = require('./api.js');\n\n//future add in https://github.com/flatiron/prompt#skipping-prompts\nvar curator_prompt = {\n\tname: \"curator_size\",\n\tdescription: \"CURATOR: what size should your curator node be?\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\n\tmessage: 'type must be a number',\ndefault:\n\t'66'\n};\nvar nanode_prompt = {\n\tname: \"nanode_size\",\n\tdescription: \"NANODE: what size should your riak nodes would you like?\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\n\tmessage: 'type must be a number',\ndefault:\n\t'66'\n};\n\nvar swarm_inputs = [{\n\tname: \"swarm_name\",\n\tdescription: \"please name your swarm\",\n\ttype: 'string',\n\tpattern: /^[A-Za-z1-9]+$/,\n\tmessage: 'name must be a alphanumeric string',\n\trequired: true\n},\ncurator_prompt, nanode_prompt,\n{\n\tname: \"num_riak_nodes\",\n\tdescription: \"how many riak nodes do you need in the swarm\",\n\ttype: 'string',\n\tpattern: /^[1-9]+$/,\ndefault:\n\t'5',\n\tmessage: 'number of nodes must be a number'\n}]\n\nvar display_sizes = function(callback) {\n\t\tapis.sizes(function(e, r) {\n\t\t\tif(e) {\n\t\t\t\tconsole.log(\"unable to get latest node sizes\");\n\t\t\t\tcallback(e);\n\t\t\t} else {\n\t\t\t\tconsole.log('node sizes:'+JSON.stringify(r.sizes));\n\t\t\t\t//nanode_prompt.size_default = r.sizes[0].id; //sets the default to the smallest type of node \n\t\t\t\t//curator_prompt.size_default = r.sizes[0].id; //sets the default to the smallest type of node\n\t\t\t\t//nanode_prompt.description = curator_prompt.description + r; //appends node description\n\t\t\t\t//curator_prompt.description = curator_prompt.description + r; //appends node description\n\t\t\t\tcallback(null,swarm_inputs);\n\t\t\t}\n\t\t});\n\t};\n\nvar start_prompts = function(callback) {\n\t\tapis.prompts(function(e, r) { //gets the latest sizes\n\t\t\tdisplay_sizes(function(e, r) {\n\t\t\t\tprompt.start();\n\t\t\t\tprompt.get(swarm_inputs, function(e, r) {\n\t\t\t\t\tcallback(e, r);\n\t\t\t\t});\n\t\t\t})\n\n\t\t});\n\t};\n\nmodule.exports = start_prompts;"]],"start1":0,"start2":0,"length1":0,"length2":1893}]],"length":1893}
